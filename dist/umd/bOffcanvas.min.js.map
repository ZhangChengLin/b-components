{"version":3,"file":"bOffcanvas.min.js","sources":["../../src/util/index.js","../../src/offcanvas/js/offcanvas-header.js","../../src/offcanvas/js/offcanvas.js","../../src/offcanvas/js/offcanvas-body.js","../../src/offcanvas/js/bOffcanvas.js","../../src/offcanvas/js/util/index.js"],"sourcesContent":["const isNull = value => null === value\nconst isEmpty = value => \"string\" === typeof value && '' === value\n\nconst bsDismissBtn = DismissType => {\n  let btn = document.createElement('button')\n\n  btn.className = 'btn-close text-reset'\n  btn.type = 'button'\n  btn.dataset['bsDismiss'] = DismissType\n  btn.ariaLabel = 'Close'\n\n  return btn\n}\n\nexport {\n  isNull,\n  isEmpty,\n  bsDismissBtn\n}\n","import {isNull, isEmpty, bsDismissBtn} from \"../../util/index\";\n\n/**\n * @param {Node|String|Function} headerNodeElement\n */\nconst offcanvasHeader = (headerNodeElement) => {\n  if (isNull(headerNodeElement) || isEmpty(headerNodeElement)) {\n    return ''\n  }\n\n  let header = document.createElement('div')\n  let title = document.createElement('h5')\n\n  header.className = 'offcanvas-header'\n\n  title.className = 'offcanvas-title'\n  title.id = 'offcanvasTitleLabel'\n  headerNodeElement instanceof Function\n    ? title.append(headerNodeElement())\n    : headerNodeElement instanceof HTMLElement\n      ? title.append(headerNodeElement)\n      : title.innerHTML = headerNodeElement\n\n  header.append(title, bsDismissBtn('offcanvas'))\n  return header\n}\n\nexport default offcanvasHeader\n","import offcanvasHeader from \"./offcanvas-header\"\nimport offcanvasBody from \"./offcanvas-body\"\n\n\n/**\n * @param {Node|String|Function} headerNodeElement\n * @param {Node|String|Function} bodyNodeElement\n * @param {String} placement\n * @param {String} offcanvasId\n */\nconst offcanvas = (headerNodeElement, bodyNodeElement, placement, offcanvasId) => {\n  let _offcanvas = document.createElement('div')\n  let header = offcanvasHeader(headerNodeElement)\n  let body = offcanvasBody(bodyNodeElement)\n\n  placement = placement ?? 'start'\n  switch (placement) {\n    case 'start':\n    case 'top':\n    case 'end':\n    case 'bottom':\n      break\n    default:\n      throw `placement 参数错误`\n  }\n\n  _offcanvas.className = `offcanvas offcanvas-${placement}`\n  _offcanvas.id = offcanvasId\n  _offcanvas.tabIndex = -1\n  _offcanvas.role = 'dialog'\n  _offcanvas.setAttribute('aria-labelledby', 'offcanvasTitleLabel')\n\n  _offcanvas.append(header, body)\n\n  return _offcanvas\n}\n\nexport default offcanvas\n","/**\n * @param {Node|String|Function} bodyNodeElement\n */\nconst offcanvasBody = (bodyNodeElement) => {\n  let offcanvas_body = document.createElement('div')\n\n  offcanvas_body.className = 'offcanvas-body'\n  bodyNodeElement instanceof Function\n    ? offcanvas_body.append(bodyNodeElement())\n    : bodyNodeElement instanceof HTMLElement\n      ? offcanvas_body.append(bodyNodeElement)\n      : offcanvas_body.innerHTML = bodyNodeElement\n\n  return offcanvas_body\n}\n\nexport default offcanvasBody\n","import offcanvas from \"./offcanvas\"\nimport {getTimeString, offcanvasEvents, removeOffcanvas} from \"./util/index\"\n\n\n/**\n * @param {Node|String|Function} headerNodeElement\n * @param {Node|String|Function} bodyNodeElement\n * @param {String} Placement\n * @param {Object} Options\n * @param {String} EventsType\n * @param {Function} EventsFunction\n */\nconst bOffcanvas = (headerNodeElement, bodyNodeElement, Placement, Options, EventsType, EventsFunction) => {\n  let timeString = getTimeString()\n  let offcanvasId = 'offcanvasId_' + timeString\n\n  let _offcanvas = offcanvas(headerNodeElement, bodyNodeElement, Placement, offcanvasId)\n  document.body.append(_offcanvas)\n\n  EventsType && EventsFunction ? offcanvasEvents(timeString, EventsType, EventsFunction) : ''\n\n  let xxx = Options ? new bootstrap.Offcanvas(_offcanvas, Options) : new bootstrap.Offcanvas(_offcanvas)\n  xxx.show()\n  removeOffcanvas(offcanvasId)\n  return offcanvasId\n}\n\nexport default bOffcanvas\n","const getTimeString = () => {\n  return new Date().getTime().toString()\n}\n\n/**\n * @param {String} offcanvasId\n * @param {String} EventsType\n * @param {Function} EventsFun\n */\nconst offcanvasEvents = (offcanvasId, EventsType, EventsFun) => {\n  const offcanvas = document.querySelector(\"#Offcanvas_\" + offcanvasId);\n  switch (EventsType) {\n    case \"show\":\n      offcanvas.addEventListener(\"show.bs.offcanvas\", function () {\n        return EventsFun();\n      });\n      break;\n    case \"shown\":\n      offcanvas.addEventListener(\"shown.bs.offcanvas\", function () {\n        return EventsFun();\n      });\n      break;\n    case \"hide\":\n      offcanvas.addEventListener(\"hide.bs.offcanvas\", function () {\n        return EventsFun();\n      });\n      break;\n    case \"hidden\":\n      offcanvas.addEventListener(\"hidden.bs.offcanvas\", function () {\n        return EventsFun();\n      });\n      break;\n    default:\n      throw 'eventName error'\n  }\n}\n\nconst removeOffcanvas = offcanvasId => {\n  const offcanvas_element = document.querySelector(\"#\" + offcanvasId);\n  offcanvas_element.addEventListener(\"hidden.bs.offcanvas\", function () {\n    let x = bootstrap.Offcanvas.getInstance(offcanvas_element);\n    x.dispose();\n    setTimeout(function () {\n      offcanvas_element.parentElement.removeChild(offcanvas_element);\n    }, 3e3);\n  });\n};\n\n\nexport {\n  getTimeString,\n  offcanvasEvents,\n  removeOffcanvas\n}\n"],"names":["offcanvasHeader","headerNodeElement","value","isEmpty","header","document","createElement","title","className","id","Function","append","HTMLElement","innerHTML","DismissType","btn","type","dataset","ariaLabel","bsDismissBtn","offcanvas","bodyNodeElement","placement","offcanvasId","_offcanvas","body","offcanvas_body","offcanvasBody","tabIndex","role","setAttribute","Placement","Options","EventsType","EventsFunction","timeString","Date","getTime","toString","EventsFun","querySelector","addEventListener","offcanvasEvents","bootstrap","Offcanvas","show","offcanvas_element","getInstance","dispose","setTimeout","parentElement","removeChild","removeOffcanvas"],"mappings":";;;;;;;;;;;;2OAAA,MCKMA,EAAmBC,IACvB,GDNsB,OCMXA,GDLGC,CAAAA,GAAS,iBAAoBA,GAAS,KAAOA,ECK1BC,CAAQF,GACvC,MAAO,GAGT,IAAIG,EAASC,SAASC,cAAc,OAChCC,EAAQF,SAASC,cAAc,MAanC,OAXAF,EAAOI,UAAY,mBAEnBD,EAAMC,UAAY,kBAClBD,EAAME,GAAK,sBACXR,aAA6BS,SACzBH,EAAMI,OAAOV,KACbA,aAA6BW,YAC3BL,EAAMI,OAAOV,GACbM,EAAMM,UAAYZ,EAExBG,EAAOO,OAAOJ,EDpBKO,CAAAA,IACnB,IAAIC,EAAMV,SAASC,cAAc,UAOjC,OALAS,EAAIP,UAAY,uBAChBO,EAAIC,KAAO,SACXD,EAAIE,QAAmB,UAAIH,EAC3BC,EAAIG,UAAY,QAETH,GCYcI,CAAa,cAC3Bf,GCdHgB,EAAY,CAACnB,EAAmBoB,EAAiBC,EAAWC,KAChE,IAAIC,EAAanB,SAASC,cAAc,OACpCF,EAASJ,EAAgBC,GACzBwB,ECVgB,CAACJ,IACrB,IAAIK,EAAiBrB,SAASC,cAAc,OAS5C,OAPAoB,EAAelB,UAAY,iBAC3Ba,aAA2BX,SACvBgB,EAAef,OAAOU,KACtBA,aAA2BT,YACzBc,EAAef,OAAOU,GACtBK,EAAeb,UAAYQ,EAE1BK,GDAIC,CAAcN,GAGzB,OADAC,EAAYA,GAAa,SAEvB,IAAK,QACL,IAAK,MACL,IAAK,MACL,IAAK,SACH,MACF,QACE,KAAM,iBAWV,OARAE,EAAWhB,UAAY,uBAAuBc,IAC9CE,EAAWf,GAAKc,EAChBC,EAAWI,UAAY,EACvBJ,EAAWK,KAAO,SAClBL,EAAWM,aAAa,kBAAmB,uBAE3CN,EAAWb,OAAOP,EAAQqB,GAEnBD,SEtBU,CAACvB,EAAmBoB,EAAiBU,EAAWC,EAASC,EAAYC,KACtF,IAAIC,GCZG,IAAIC,MAAOC,UAAUC,WDaxBf,EAAc,eAAiBY,EAE/BX,EAAaJ,EAAUnB,EAAmBoB,EAAiBU,EAAWR,GAQ1E,OAPAlB,SAASoB,KAAKd,OAAOa,GAErBS,GAAcC,GCVQ,EAACX,EAAaU,EAAYM,KAChD,MAAMnB,EAAYf,SAASmC,cAAc,cAAgBjB,GACzD,OAAQU,GACN,IAAK,OACHb,EAAUqB,iBAAiB,qBAAqB,WAC9C,OAAOF,OAET,MACF,IAAK,QACHnB,EAAUqB,iBAAiB,sBAAsB,WAC/C,OAAOF,OAET,MACF,IAAK,OACHnB,EAAUqB,iBAAiB,qBAAqB,WAC9C,OAAOF,OAET,MACF,IAAK,SACHnB,EAAUqB,iBAAiB,uBAAuB,WAChD,OAAOF,OAET,MACF,QACE,KAAM,oBDdqBG,CAAgBP,EAAYF,EAAYC,IAE7DF,EAAU,IAAIW,UAAUC,UAAUpB,EAAYQ,GAAW,IAAIW,UAAUC,UAAUpB,IACvFqB,OCekBtB,CAAAA,IACtB,MAAMuB,EAAoBzC,SAASmC,cAAc,IAAMjB,GACvDuB,EAAkBL,iBAAiB,uBAAuB,WAChDE,UAAUC,UAAUG,YAAYD,GACtCE,UACFC,YAAW,WACTH,EAAkBI,cAAcC,YAAYL,KAC3C,SDrBLM,CAAgB7B,GACTA"}